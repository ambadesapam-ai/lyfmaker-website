// backend/routes/admin.js
const express = require('express');
const router = express.Router();
const User = require('../models/User');
const Match = require('../models/Match');

// Authentication middleware for admin
router.use((req, res, next) => {
  if (!req.user || !req.user.isAdmin) {
    return res.status(403).json({ error: 'Admin access required' });
  }
  next();
});

// Get all users
router.get('/users', async (req, res) => {
  try {
    const { page = 1, limit = 20 } = req.query;
    const users = await User.find()
      .skip((page - 1) * limit)
      .limit(limit);
      
    res.json(users);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// Get call analytics
router.get('/analytics/calls', async (req, res) => {
  try {
    const data = await AnalyticsCall.aggregate([
      {
        $group: {
          _id: {
            date: { $dateToString: { format: "%Y-%m-%d", date: "$createdAt" } },
            premiumTier: "$premiumTier"
          },
          count: { $sum: 1 },
          totalDuration: { $sum: "$duration" }
        }
      }
    ]);
    
    res.json(data);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

module.exports = router;
